-> 数据类型：
	-> boolean 布尔
	-> number 数字
	-> string 字符串
	-> Undefined 未定义(当变量被声明之后没有被初始化,值为undefined,undefined代表什么都没有)
	-> Null 空对象(初始化的值为null则输出null,null也可以认为是一个值,这个值就是null)
		-> null是一个object类型  
		-> undefined表示没有,null表示没有  虽然他们的值不一样,但是他们都表示没有
	-> Object 对象类型
	
	-> Undefined类型、Null类型都是只有一个值的数据类型,值分别是undefined与null
	
	-> 查看变量的类型 typeof变量名或typeof(变量名),返回变量类型的字符串
	
	-> 类型转换：类型名(变量名)或parseInt(变量名) //这个是装换为int类型
	
-> 判等：
	-> 双等号 == ：判断值是否相等
		-> 只要值相等就返回true  不需要考虑类型 
			-> 比如所字符串123和数字123 双等号是相等的
	-> 三等号 === ：先判断类型是否相同,在判断值是否相等
		-> 三个等号,先判断类型是否一样,如果类型不一样,那么就算值一样,也不算是相等
		-> !==判不等 判断类型和值不等
	-> undefined==null 结果为什么？  结果为 true  它们两个相等
	-> undefined===null 结果为什么？
	-> 问：如何判断变量是否可用？
		-> 答：先判断类型是否为undefined,在判断值是否为null,否则可用
		-> 提示：type(变量名)！='undefined'
	-> 非数字判断：isNaN();   //is not a number  	不是数字的时候返回一个true
		-> 只要能转换为数字类型的值就是数字
	-> eval()用于将一段字符串转换为js代码执行