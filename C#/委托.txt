委托的概念：
1.声明一个委托类型
2.委托所指向的函数必须跟委托具有相同的签名(签名：参数和返回值)

声明一个委托指向一个方法：
*****委托必须写在命名空间下面，和类平级
public delegate 方法类型 名称(参数)
其实就是 public delegate 方法()

委托类型  就是方法类型，前提是签名一样

匿名函数：当你的方法只需只需一次的时候，就可以使用匿名函数
方法("参数","委托类型")
里面的委托类型可以写成为匿名函数
delegate(参数){方法体}

更为简便的匿名函数
委托类型 委托变量=delegate(参数){方法体}
委托变量(参数);

匿名函数的签名也必须和委托一样


lamda表达式！！！  其实就是匿名函数的更为简洁的一种书写方式
委托类型 委托变量=(参数)=>{方法体}
调用	
=> : goes to 就是去哪的意思


使用委托在窗体间传值
1.声明一个委托类型
2.创建一个委托类型的字段，用来存储赋值的方法
3.在f2的构造函数中添加一个委托对象
4.在f1创建对象，将赋值方法传进去
5.在button中调用这个字段，因为这个字段现在是存储的一个方法，直接像方法调用即可


多播委托：委托不止指向一个方法，可以指向多个方法
public delegate void Del();

调用：Del de=t1;
	  de+=t2;
	  de+=t3;
	  de+=t4;

public static void T1();
public static void T2();
public static void T3();
public static void T4();

这个就是多播委托
当然也有     -=



