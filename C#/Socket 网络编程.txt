telnet!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
172.17.0.41
Socket  网络编程
Socket可以理解为两个电脑之间联系所使用的工具

Socket的英文原意是"孔"或"插座"，作为进程通信机制，取最后一种意思。通常也称作"套接字"，用于描述IP地址和端口，是一个通信连的句柄
其实就是两个程序之间通信用的
句柄：实际上是一种指向某种资源的指针

Socket 非常类似于电话插座，以一个电话网为例子，电话的通话双方相当于相互通信的两个程序，电话号码就是IP地址，任何用户在通话之前，首先要占有
一部电话机，相当于申请一个Socket，用时要知道对方的号码，相当于对方有一个固定的Socket，然后向对方拨号呼叫，相当于向对方发送链接请求，对方
如果在场并且空闲，拿起电话话筒，双方就可以正式通话，相当于是连接成功，双方通话的过程，是一方向电话机发送信号和对方从电话机接收信号的过程
相当于向Socket发送数据和从Socket接收数据，通话结束后，一方挂起电话，相当于关闭Socket，撤销连接

1.服务端 Welcoming Socket  开始监听端口（负责监听客户端连接信息）
2.客户端 Client Socket  连接服务端指定端口（负责接收和发送服务端消息）
3.服务端 Welcoming Socket 监听到客户端连接，创建Connection Socket 。（负责和客户端通信）

应用程序之间所使用的默认语言：协议
协议：常用的两个协议
1.TCP
2,UDP

在Internet上有很多的主机，这些主机一般运行了多个服务软件，同时提供几种服务，每种服务都打开一个socket，并绑定到一个端口上
不同的端口对应不同的服务(应用程序)
例如：
http：使用80端口
ftp：使用21端口
smtp：25端口

有两种类型： 50000
1.流式 Socket(STREAM)：
是一种面向连接的Socket，针对面向连接的TCP服务应用，安全，但是效率低；

2.数据报式Socket(DATAGRAM)：
是一种无连接的Socket，对应于无连接的UDP服务应用，不安全(丢失，顺序混乱，在接收端要分析重排及重发)，但效率高

1.首先创建一个负责监听的Socket，它监听的是本机应用程序的端口号，但这个端口号中包含本机的IP地址，而监听的目的是：等待客户端的连接
2.当我们监听到了客户端发送过来的请求的时候，创建一个负责通信的Socket
   而负责通信的Socket是来自：负责监听的Socket调用Accept（）方法得到的，这个时候我们应该把这个负责通信的Socket写在一个循环里面，
   因为一个服务器端可能有多个客户端连接过来，我们应该为每一个客户端创建一个负责通信的Socket
   但是，Accept这个方法会导致我们程序假死，所以这个时候我们应该把他封装进一个方法中，然后创建一个新的后台线程去执行这个方法

编写过程：
1.当点击开始监听的时候，在服务器端创建一个负责监听IP地址和端口号的Socket
Socket  socketWatch=new Socket(AddressFamily.InterNetWork，SocketType.Stream，ProtocolTyple.Tcp)
第一个参数：IPV4
第二个参数：Stream类型的流
协议;Tcp 

2.侦听本机所有的IP地址的对应端口（本机可能有多个或者一个ip）
IpAddress ip =new IpAddress.Any;  //这个是一个字段，是只读的
3. 创建端口对象
IPEndpoint  point =new IPEndpoint(ip，端口号 必须是int类型的)
4.监听
//绑定端口号：SocketWatch.Bind(Point)；
展示结果：
5.设置一次性访问的人数
//这里设置的是10个
SocketWatch.Listen（10）；
6.开一个线程去执行接收客户端的请求
7.接收客户端请求
//等待客户端的连接，接收客户端的请求，并且创建一个负责通信的Socket
//返回的这个SocketSend是负责通信的
Socket SocSend = SocketWatch.Accept()
8.拿到远程连接的客户端的端口号和IP地址
//获取连接的客户端的IP地址
SocketSend.RemoteEndPoint.Tostring();
9.发送消息：Send
将需要发送的消息转换为字节数组，然后通过Send发送


客户端发送消息给服务端
1.创建一个负责通信的Socket
2.获取服务端的IP地址
3.获取端口号
4.连接服务端：Connect
5.接收服务端发送的消息，封装为一个方法，创建一个线程去执行：Receive
6.发送消息：Send

发送文件
1.使用FileStream 读取需要发送的文件
2.定义一个字节数组，表示发送的大小
3.调用read方法，得到读取的实际大小
4.因为要判断发送的是什么文件，所以我们添加一个list泛型集合
5.调用负责接收数据的socket的Send方法即可

接收文件
使用SaveFileDialog类
调用write方法 







