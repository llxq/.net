GDI：
什么是GDI？：（一句话概括就是：画图的）   这是一个单独的技术
                    GDI+(Graphics  Device  InterFace) 是一种绘图装置接口，可以将应用程序和绘图硬件分隔，让我们能够编写与装置无关的应用程序。
					它可以让我们不需注意特定的显示装置的详细数据，便可在屏幕或打印机显示信息。我们可以呼叫FDI+类别所提供的方法，然后这些方法会适当
					地呼叫特定的装置驱动程序，而完成绘图。而且与.NET进行了更好的融合

在【GDI+】中所采用的坐标系统，与平时人们较常见的坐标系统不同，主要差别在于，一般的二维坐标系，X轴与Y轴分别是往右往上递增，而【GDI+】所
采用的坐标系，X轴与Y轴则分别是往右往下递增

Y                                    0,0 -------------X 
| 递增                                |                  递增 
|                                       |
0，0----------X                     Y
                   递增                   递增                           
				  
				  
创建GDI对象
调用类名 Graphics 
-----
//创建GDI对象
Graphics  G  =this.CreateGraphics();
-----
//创建画笔对象
Pen  P=new Pen(Brushes.Yellow)
Brushes：颜色的基类
-----
//创建两个点
就是定义两个坐标：point
-----
//调用GDI对象开始画直线
G.DrawLine(画笔对象，X坐标，Y坐标)
DrawLines：画多条直线
-----
//绘制矩形
size size=new size(宽，高)
Rectangle rec =new Rectangle(矩形左上角点坐标,大小 其实就是上面那个size对象)
左上角坐标代表该矩形的位置所在
G.DrawRectangle(画笔对象，矩形对象)
-----
//绘制扇形
G.DrawPie（画笔对象，矩形对象，角度，角度）
-----
//绘制文本 
G.DrawString(需要绘制的字符串，字体对象 new font("字体"，大小，样式)，颜色，左上角坐标)
字体：new point("字体"，大小，是否加粗等)
-----
每当我们移动窗体的时候，每次移动一下，窗体都重新绘制一遍
如果我们在窗体上绘制一条直线，当我们窗体移出屏幕外面的时候，我们绘制的图像就会消失
解决办法：
找到窗体的Point属性：在控件需要重新绘制的时候发生的事件
然后把我们绘制图像的方法调用即可，也就是当窗体重新绘制的时候，我们的图像也重新绘制

//绘制验证码
1.首先产生5个随机数
2.创建像素位图：Bitmap  这个类继承于 Image
3.从指定的image创建一个Graphics 调用Graphics的FromImage方法
4.开始画图，通过循环一个写入这五个数字
  这个时候我们定义两个数组存放字体和Color
  而且为了不让他们重叠，我们可以设置他们的间隔一样，也就是横坐标，但是他们的纵坐标可以一样
  开始画图：调用drawString即可
5.绘制直线：横纵坐标必须是0到验证码的宽和高之间
6.绘制像素颗粒，其实就是那些小点点：调用像素位图的setPixel即可
7.将图片镶嵌在PictureBox中























